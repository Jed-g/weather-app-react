{"version":3,"sources":["components/search_page/CitySearchField.jsx"],"names":["removeDiacritics","diacritics","remove","calculateClosestMatches","bestFitArray","cityList","cityName","howManyMax","steps","iteration","setListOfSuggestions","breakBetweenIterationsInMs","cancelExec","executingAutocompleteLookup","slice","Math","floor","length","forEach","city","min","Infinity","posOfCity","name","toLowerCase","search","posOfCityWithoutDiacritics","indexToInsertAt","i","fitValue","splice","max","indexToDelete","cityObject","index","current","setTimeout","CitySearchField","listOfSuggestions","errorStateCityNameField","setErrorStateCityNameField","cityNameInField","setCityNameInField","suggestionCurrentlySelected","setSuggestionCurrentlySelected","textFieldInner","useRef","useEffect","focus","CITY_LIST","prev","replace","textField","useState","textFieldWidth","setTextFieldWidth","window","getComputedStyle","width","resizeEventFunction","addEventListener","removeEventListener","listOfSuggestionsPersist","eventListenerFunction","e","document","key","addKeydownEventListenerOnKeyupFunction","redirect","setRedirect","anchorEl","setAnchorEl","open","Boolean","onClickAway","error","ref","InputProps","endAdornment","position","onClick","onMouseDown","preventDefault","color","value","onChange","target","variant","inputRef","fullWidth","label","currentTarget","style","zIndex","role","undefined","transition","disablePortal","TransitionProps","placement","transformOrigin","height","top","left","transform","map","push","to","id","selected","state","country"],"mappings":"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","file":"static/js/7.d1fdfc2a.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Popper,\r\n  Grow,\r\n  MenuItem,\r\n  ClickAwayListener,\r\n  Paper,\r\n  MenuList,\r\n  LinearProgress,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport diacritics from \"diacritics\";\r\n\r\nimport CITY_LIST from \"../../api/city.list.min.json\";\r\n\r\nconst removeDiacritics = diacritics.remove;\r\n\r\nfunction calculateClosestMatches(\r\n  bestFitArray,\r\n  cityList,\r\n  cityName,\r\n  howManyMax,\r\n  steps,\r\n  iteration,\r\n  setListOfSuggestions,\r\n  breakBetweenIterationsInMs,\r\n  cancelExec,\r\n  executingAutocompleteLookup\r\n) {\r\n  cityList\r\n    .slice(\r\n      Math.floor((iteration * cityList.length) / steps),\r\n      Math.floor(((iteration + 1) * cityList.length) / steps)\r\n    )\r\n    .forEach((city) => {\r\n      let min = Infinity;\r\n      const posOfCity = city.name.toLowerCase().search(cityName.toLowerCase());\r\n      if (posOfCity !== -1) {\r\n        if (city.name.length - cityName.length - 1 / (1 + posOfCity) < min) {\r\n          min = city.name.length - cityName.length - 1 / (1 + posOfCity);\r\n        }\r\n      }\r\n\r\n      const posOfCityWithoutDiacritics = removeDiacritics(city.name)\r\n        .toLowerCase()\r\n        .search(removeDiacritics(cityName).toLowerCase());\r\n      if (posOfCityWithoutDiacritics !== -1) {\r\n        if (\r\n          (city.name.length -\r\n            cityName.length -\r\n            1 / (1 + posOfCityWithoutDiacritics)) *\r\n            1.25 <\r\n          min\r\n        ) {\r\n          min =\r\n            (city.name.length -\r\n              cityName.length -\r\n              1 / (1 + posOfCityWithoutDiacritics)) *\r\n            1.25;\r\n        }\r\n      }\r\n\r\n      if (min !== Infinity) {\r\n        let indexToInsertAt = 0;\r\n        for (let i = 0; i < bestFitArray.length; i++) {\r\n          if (min >= bestFitArray[i].fitValue) {\r\n            indexToInsertAt++;\r\n          }\r\n        }\r\n        bestFitArray.splice(indexToInsertAt, 0, {\r\n          fitValue: min,\r\n          city: city,\r\n        });\r\n      }\r\n\r\n      if (bestFitArray.length > howManyMax) {\r\n        let max = -Infinity;\r\n        let indexToDelete = null;\r\n        bestFitArray.forEach((cityObject, index) => {\r\n          if (cityObject.fitValue > -0.5 && cityObject.fitValue >= max) {\r\n            max = cityObject.fitValue;\r\n            indexToDelete = index;\r\n          }\r\n        });\r\n        indexToDelete && bestFitArray.splice(indexToDelete, 1);\r\n      }\r\n    });\r\n  if (!cancelExec.current) {\r\n    if (iteration < steps - 1) {\r\n      setTimeout(\r\n        () =>\r\n          calculateClosestMatches(\r\n            bestFitArray,\r\n            cityList,\r\n            cityName,\r\n            howManyMax,\r\n            steps,\r\n            iteration + 1,\r\n            setListOfSuggestions,\r\n            breakBetweenIterationsInMs,\r\n            cancelExec,\r\n            executingAutocompleteLookup\r\n          ),\r\n        breakBetweenIterationsInMs\r\n      );\r\n    } else {\r\n      executingAutocompleteLookup.current = false;\r\n      if (cityName) {\r\n        setListOfSuggestions(bestFitArray);\r\n      } else {\r\n        setListOfSuggestions([]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction CitySearchField({\r\n  listOfSuggestions,\r\n  setListOfSuggestions,\r\n  errorStateCityNameField,\r\n  setErrorStateCityNameField,\r\n  cityNameInField,\r\n  setCityNameInField,\r\n  executingAutocompleteLookup,\r\n  suggestionCurrentlySelected,\r\n  setSuggestionCurrentlySelected,\r\n}) {\r\n  const textFieldInner = useRef();\r\n  useEffect(() => textFieldInner.current.focus(), []);\r\n\r\n  useEffect(() => setErrorStateCityNameField(false), []);\r\n\r\n  useEffect(() => setSuggestionCurrentlySelected(0), []);\r\n\r\n  const cancelExec = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const breakBetweenIterationsInMs = 5;\r\n    cancelExec.current = executingAutocompleteLookup.current;\r\n    if (CITY_LIST) {\r\n      setTimeout(() => {\r\n        executingAutocompleteLookup.current = true;\r\n        setListOfSuggestions((prev) => prev);\r\n        cancelExec.current = false;\r\n        calculateClosestMatches(\r\n          [],\r\n          CITY_LIST,\r\n          cityNameInField.replace(/[#^$|/\\\\{}()?*+.[\\]]/g, \"\"),\r\n          5,\r\n          30,\r\n          0,\r\n          setListOfSuggestions,\r\n          breakBetweenIterationsInMs,\r\n          cancelExec,\r\n          executingAutocompleteLookup\r\n        );\r\n      }, 2 * breakBetweenIterationsInMs);\r\n    }\r\n  }, [cityNameInField]);\r\n\r\n  const textField = useRef();\r\n  const [textFieldWidth, setTextFieldWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTextFieldWidth(window.getComputedStyle(textField.current).width);\r\n    const resizeEventFunction = () => {\r\n      setTextFieldWidth(window.getComputedStyle(textField.current).width);\r\n    };\r\n    window.addEventListener(\"resize\", resizeEventFunction);\r\n\r\n    return () => window.removeEventListener(\"resize\", resizeEventFunction);\r\n  }, []);\r\n\r\n  const listOfSuggestionsPersist = useRef();\r\n  listOfSuggestionsPersist.current = listOfSuggestions;\r\n\r\n  useEffect(() => {\r\n    const eventListenerFunction = function (e) {\r\n      document.removeEventListener(\"keydown\", eventListenerFunction);\r\n\r\n      switch (e.key) {\r\n        case \"ArrowUp\":\r\n          setSuggestionCurrentlySelected((prev) =>\r\n            prev - 1 >= 0 ? prev - 1 : prev\r\n          );\r\n          break;\r\n        case \"ArrowDown\":\r\n          setSuggestionCurrentlySelected((prev) =>\r\n            prev + 1 < listOfSuggestionsPersist.current.length ? prev + 1 : prev\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", eventListenerFunction);\r\n\r\n    const addKeydownEventListenerOnKeyupFunction = function () {\r\n      document.addEventListener(\"keydown\", eventListenerFunction);\r\n    };\r\n\r\n    document.addEventListener(\"keyup\", addKeydownEventListenerOnKeyupFunction);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", eventListenerFunction);\r\n      document.removeEventListener(\r\n        \"keyup\",\r\n        addKeydownEventListenerOnKeyupFunction\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  const endAdornment = () => {\r\n    if (cityNameInField) {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            onClick={() => {\r\n              setCityNameInField(\"\");\r\n            }}\r\n            onMouseDown={(e) => e.preventDefault()}\r\n            color=\"secondary\"\r\n          >\r\n            <ClearIcon />\r\n          </IconButton>\r\n        </InputAdornment>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      {redirect}\r\n      <ClickAwayListener onClickAway={() => setAnchorEl(null)}>\r\n        <div>\r\n          <TextField\r\n            error={errorStateCityNameField}\r\n            ref={textField}\r\n            InputProps={{ endAdornment: endAdornment() }}\r\n            value={cityNameInField}\r\n            onChange={(e) => {\r\n              setSuggestionCurrentlySelected(0);\r\n              setCityNameInField(e.target.value);\r\n              setErrorStateCityNameField(false);\r\n              setAnchorEl(textField.current);\r\n            }}\r\n            variant=\"outlined\"\r\n            inputRef={textFieldInner}\r\n            fullWidth\r\n            label=\"City Name\"\r\n            onClick={(e) => {\r\n              setAnchorEl(e.currentTarget);\r\n              setErrorStateCityNameField(false);\r\n            }}\r\n          />\r\n          {executingAutocompleteLookup.current && (\r\n            <Popper\r\n              style={{ zIndex: 1500, width: textFieldWidth }}\r\n              open={open}\r\n              anchorEl={anchorEl}\r\n              role={undefined}\r\n              transition\r\n              disablePortal\r\n            >\r\n              {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                  {...TransitionProps}\r\n                  style={{\r\n                    transformOrigin:\r\n                      placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                  }}\r\n                >\r\n                  <Paper style={{ height: \"30px\" }}>\r\n                    <LinearProgress\r\n                      style={{\r\n                        width: `calc(${textFieldWidth} - 40px)`,\r\n                        top: \"50%\",\r\n                        left: \"50%\",\r\n                        transform: \"translate(-50%, -50%)\",\r\n                      }}\r\n                    />\r\n                  </Paper>\r\n                </Grow>\r\n              )}\r\n            </Popper>\r\n          )}\r\n          {!executingAutocompleteLookup.current &&\r\n            listOfSuggestions.length !== 0 && (\r\n              <Popper\r\n                style={{ zIndex: 1500, width: textFieldWidth }}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n              >\r\n                {({ TransitionProps, placement }) => (\r\n                  <Grow\r\n                    {...TransitionProps}\r\n                    style={{\r\n                      transformOrigin:\r\n                        placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                    }}\r\n                  >\r\n                    <Paper>\r\n                      <MenuList>\r\n                        {listOfSuggestions.map((cityObject, index) => {\r\n                          return (\r\n                            <div key={cityObject.city.id}>\r\n                              <MenuItem\r\n                                onClick={() =>\r\n                                  executingAutocompleteLookup.current ||\r\n                                  setRedirect(\r\n                                    <Redirect\r\n                                      push\r\n                                      to={`/${cityObject.city.id}`}\r\n                                    />\r\n                                  )\r\n                                }\r\n                                selected={index === suggestionCurrentlySelected}\r\n                              >\r\n                                {cityObject.city.name}\r\n                                {cityObject.city.state &&\r\n                                  `, ${cityObject.city.state}`}\r\n                                {cityObject.city.country &&\r\n                                  `, ${cityObject.city.country}`}\r\n                              </MenuItem>\r\n                              {listOfSuggestions.length - 1 === index || (\r\n                                <Divider />\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </MenuList>\r\n                    </Paper>\r\n                  </Grow>\r\n                )}\r\n              </Popper>\r\n            )}\r\n        </div>\r\n      </ClickAwayListener>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CitySearchField;\r\n"],"sourceRoot":""}