{"version":3,"sources":["reportWebVitals.js","index.js","../external \"mapboxgl\"","components/header/Header.jsx","components/main_page/Tabs.jsx","App.js","components/header/Drawer.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","module","exports","mapboxgl","Header","AppBar","position","style","width","Toolbar","display","justifyContent","alignItems","Drawer","Hidden","mdUp","textDecoration","to","Button","size","variant","smDown","endIcon","xsDown","top","left","transform","Typography","component","marginLeft","Tabs","tabSelected","match","theme","useTheme","breakpointMatches","useMediaQuery","breakpoints","down","useState","redirect","setRedirect","color","indicatorColor","centered","value","Tab","label","onClick","push","params","id","SearchPage","lazy","MainPage","selectTheme","state","darkTheme","createMuiTheme","palette","primary","main","error","type","lightTheme","background","default","paper","responsiveFontSizes","localStorage","getItem","setItem","ApiKeysContext","createContext","SettingsContext","API_KEYS","SET_API_KEYS","temperature","distance","speed","pressure","settings","setSettings","useEffect","API_KEY_OPENWEATHERMAP","API_KEY_MAPBOX","useReducer","setTheme","setTabSelected","className","ThemeProvider","CssBaseline","options","suppressScrollX","height","flexDirection","Provider","path","props","flexGrow","fallback","CircularProgress","exact","textAlign","IconButton","margin","useStyles","makeStyles","menuIcon","settingButtons","textTransform","useContext","classes","isDrawerOpen","setIsDrawerOpen","iOS","process","browser","test","navigator","userAgent","disableBackdropTransition","disableDiscovery","ModalProps","onBackdropClick","anchor","open","onOpen","onClose","subheader","prev"],"mappings":"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","file":"static/js/main.75d39c43.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = mapboxgl;","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, Button, Hidden } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Drawer from \"./Drawer\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <AppBar position=\"static\" style={{ width: \"100vw\" }}>\r\n      <Toolbar>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Drawer />\r\n          <Hidden mdUp>\r\n            <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n              <Button size=\"small\" variant=\"contained\">\r\n                New Search\r\n              </Button>\r\n            </Link>\r\n          </Hidden>\r\n          <Hidden smDown>\r\n            <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n              <Button endIcon={<SearchIcon />} variant=\"contained\">\r\n                New Search\r\n              </Button>\r\n            </Link>\r\n          </Hidden>\r\n        </div>\r\n        <Hidden xsDown>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Weather Forecast\r\n            </Typography>\r\n            <CloudIcon style={{ marginLeft: 8 }} />\r\n          </div>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Tabs as MuiTabs,\r\n  Tab,\r\n  AppBar,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Tabs({ tabSelected, match }) {\r\n  const theme = useTheme();\r\n  const breakpointMatches = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      {redirect}\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <MuiTabs\r\n          indicatorColor=\"primary\"\r\n          variant={breakpointMatches ? \"fullWidth\" : \"standard\"}\r\n          centered\r\n          value={tabSelected}\r\n        >\r\n          <Tab\r\n            label=\"Today\"\r\n            onClick={() => {\r\n              setRedirect(<Redirect push to={`/${match.params.id}`} />);\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"Hourly\"\r\n            onClick={() => {\r\n              setRedirect(<Redirect push to={`/${match.params.id}/hourly`} />);\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"Daily\"\r\n            onClick={() => {\r\n              setRedirect(<Redirect push to={`/${match.params.id}/daily`} />);\r\n            }}\r\n          />\r\n        </MuiTabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tabs;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  lazy,\r\n  Suspense,\r\n  createContext,\r\n} from \"react\";\r\nimport \"./App.css\";\r\nimport \"fontsource-roboto\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch as RouterSwitch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Header from \"./components/header/Header\";\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  CssBaseline,\r\n  IconButton,\r\n  CircularProgress,\r\n  responsiveFontSizes,\r\n} from \"@material-ui/core\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\r\nimport { API_KEY_OPENWEATHERMAP, API_KEY_MAPBOX } from \"./api/ENV.json\";\r\nimport Tabs from \"./components/main_page/Tabs\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nconst SearchPage = lazy(() => import(\"./components/search_page/SearchPage\"));\r\n\r\nconst MainPage = lazy(() => import(\"./components/main_page/MainPage\"));\r\n\r\nfunction selectTheme(state, theme) {\r\n  let darkTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#00acc1\",\r\n      },\r\n      error: {\r\n        main: \"#e53935\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  let lightTheme = createMuiTheme({\r\n    palette: {\r\n      background: {\r\n        default: \"#DCDCDC\",\r\n        paper: \"#F5F5F5\",\r\n      },\r\n      primary: {\r\n        main: \"#00bfa5\",\r\n      },\r\n      type: \"light\",\r\n    },\r\n  });\r\n\r\n  darkTheme = responsiveFontSizes(darkTheme);\r\n  lightTheme = responsiveFontSizes(lightTheme);\r\n\r\n  if (!state) {\r\n    const themeInLocalStorage = localStorage.getItem(\"theme\");\r\n\r\n    switch (themeInLocalStorage) {\r\n      case \"dark\":\r\n        return darkTheme;\r\n      case \"light\":\r\n        return lightTheme;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  switch (theme) {\r\n    case \"dark\":\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n      return darkTheme;\r\n    case \"light\":\r\n      localStorage.setItem(\"theme\", \"light\");\r\n      return lightTheme;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction initialLoad(SET_API_KEY) {\r\n  SET_API_KEY({ API_KEY_OPENWEATHERMAP, API_KEY_MAPBOX });\r\n}\r\n\r\nexport const ApiKeysContext = createContext();\r\nexport const SettingsContext = createContext();\r\n\r\nfunction App() {\r\n  const [API_KEYS, SET_API_KEYS] = useState(null);\r\n  const [settings, setSettings] = useState({\r\n    temperature: \"c\",\r\n    distance: \"m\",\r\n    speed: \"kph\",\r\n    pressure: \"hpa\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    initialLoad(SET_API_KEYS);\r\n  }, []);\r\n\r\n  const [theme, setTheme] = useReducer(selectTheme, selectTheme(null, \"dark\"));\r\n  const [tabSelected, setTabSelected] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <PerfectScrollbar options={{ suppressScrollX: true }}>\r\n            <div\r\n              style={{\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <SettingsContext.Provider value={[settings, setSettings]}>\r\n                <Header />\r\n                <Route\r\n                  path=\"/:id\"\r\n                  render={(props) => (\r\n                    <Tabs {...props} tabSelected={tabSelected} />\r\n                  )}\r\n                />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexGrow: \"1\",\r\n                  }}\r\n                >\r\n                  {API_KEYS && (\r\n                    <Suspense fallback={<CircularProgress />}>\r\n                      <ApiKeysContext.Provider value={API_KEYS}>\r\n                        <RouterSwitch>\r\n                          <Route exact path=\"/\" component={SearchPage} />\r\n                          <Route\r\n                            path=\"/:id\"\r\n                            render={(props) => (\r\n                              <MainPage\r\n                                {...props}\r\n                                setTabSelected={setTabSelected}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </RouterSwitch>\r\n                      </ApiKeysContext.Provider>\r\n                    </Suspense>\r\n                  )}\r\n                </div>\r\n                <div style={{ width: \"100vw\", textAlign: \"right\" }}>\r\n                  <IconButton\r\n                    style={{ margin: \"0 10px 10px 0\" }}\r\n                    onClick={() => {\r\n                      setTheme(\r\n                        theme.palette.type === \"dark\" ? \"light\" : \"dark\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    {theme.palette.type === \"dark\" ? (\r\n                      <Brightness2Icon />\r\n                    ) : (\r\n                      <Brightness7Icon />\r\n                    )}\r\n                  </IconButton>\r\n                </div>\r\n              </SettingsContext.Provider>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  IconButton,\r\n  SwipeableDrawer,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Divider,\r\n  ListSubheader,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport { Menu } from \"@styled-icons/heroicons-solid/Menu\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport { SettingsContext } from \"../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n  menuIcon: {\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n  },\r\n  settingButtons: {\r\n    textTransform: \"none\",\r\n  },\r\n});\r\n\r\nfunction Drawer() {\r\n  const [settings, setSettings] = useContext(SettingsContext);\r\n\r\n  const classes = useStyles();\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={() => setIsDrawerOpen(true)}>\r\n        <Menu width={24} className={classes.menuIcon} />\r\n      </IconButton>\r\n      <SwipeableDrawer\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        ModalProps={{ onBackdropClick: () => setIsDrawerOpen(false) }}\r\n        anchor={\"left\"}\r\n        open={isDrawerOpen}\r\n        onOpen={() => setIsDrawerOpen(true)}\r\n        onClose={() => setIsDrawerOpen(false)}\r\n      >\r\n        <List style={{ width: 250 }}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h6\" component=\"p\">\r\n                    Weather Forecast\r\n                  </Typography>\r\n                  <CloudIcon style={{ marginLeft: 8 }} />\r\n                </div>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider />\r\n          <List subheader={<ListSubheader>Settings</ListSubheader>}>\r\n            <ListItem>\r\n              <ListItemText primary=\"Temperature\" />\r\n              <ListItemSecondaryAction>\r\n                <ButtonGroup size=\"small\" variant=\"text\">\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.temperature === \"c\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, temperature: \"c\" }))\r\n                    }\r\n                  >\r\n                    °C\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.temperature === \"f\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, temperature: \"f\" }))\r\n                    }\r\n                  >\r\n                    °F\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.temperature === \"k\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, temperature: \"k\" }))\r\n                    }\r\n                  >\r\n                    K\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Distance\" />\r\n              <ListItemSecondaryAction>\r\n                <ButtonGroup size=\"small\" variant=\"text\">\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.distance === \"m\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, distance: \"m\" }))\r\n                    }\r\n                  >\r\n                    m\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.distance === \"km\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, distance: \"km\" }))\r\n                    }\r\n                  >\r\n                    km\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.distance === \"mi\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, distance: \"mi\" }))\r\n                    }\r\n                  >\r\n                    mi\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Speed\" />\r\n              <ListItemSecondaryAction>\r\n                <ButtonGroup size=\"small\" variant=\"text\">\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.speed === \"kph\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, speed: \"kph\" }))\r\n                    }\r\n                  >\r\n                    kph\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.speed === \"mph\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, speed: \"mph\" }))\r\n                    }\r\n                  >\r\n                    mph\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.speed === \"ms\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, speed: \"ms\" }))\r\n                    }\r\n                  >\r\n                    m/s\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Pressure\" />\r\n              <ListItemSecondaryAction>\r\n                <ButtonGroup size=\"small\" variant=\"text\">\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.pressure === \"hpa\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, pressure: \"hpa\" }))\r\n                    }\r\n                  >\r\n                    hPa\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.pressure === \"atm\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, pressure: \"atm\" }))\r\n                    }\r\n                  >\r\n                    atm\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.settingButtons}\r\n                    color={settings.pressure === \"inhg\" && \"primary\"}\r\n                    onClick={() =>\r\n                      setSettings((prev) => ({ ...prev, pressure: \"inhg\" }))\r\n                    }\r\n                  >\r\n                    inHg\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </List>\r\n        </List>\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Drawer;\r\n"],"sourceRoot":""}